services:
  db:
    image: postgres:16
    container_name: lexora_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: lexora
    ports:
      - '127.0.0.1:5433:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d lexora']
      interval: 5s
      timeout: 5s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4
    container_name: lexora_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@lexora.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - '127.0.0.1:5050:80' # UI pgAdmin
    depends_on:
      - db
    volumes:
      - pgadmin:/var/lib/pgadmin

  redis:
    image: redis:7-alpine
    container_name: lexora_redis
    ports:
      - '127.0.0.1:6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

  # backend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.dev
  #   container_name: lexora_backend
  #   ports:
  #     - '127.0.0.1:4000:4000' # API сервер
  #   volumes:
  #     - .:/app # Монтируем код для hot reload
  #     - /app/node_modules # Исключаем node_modules из монтирования
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=4000
  #   depends_on:
  #     - db
  #   develop:
  #     watch:
  #       - action: sync
  #         path: ./src
  #         target: /app/src
  #       - action: rebuild
  #         path: package.json

volumes:
  pgdata:
  pgadmin:
  redis_data:
